#!/usr/bin/env bash

# Defines apps that Lipstick supports.
#
# App definition symbols use a naming convention based on the <appName>:
#
# apps+=(<appName>)  # Adds <appName> to list of supported apps
# <appName>Command   # (string) the name of the app binary used to check if app exists
# <appName>Init      # (function) carries out any one-time initialisation that might
#                    #   be necessary (e.g., ensuring app configuration file exists).
# <appName>Light     # (function) run to switch app to its light mode/theme.
# <appName>Dark      # (function) run to switch app to its dark mode/theme.
#
# Remember that the various functions above will be called in different processes
# so do not update global variables from within them and expect other functions for
# your app to read that value. e.g., when getting config paths from the app itself
# (see bat app for an example of this), repeat the command in each of your functions
# that needs access to that path.

# Use CONFIG_HOME as the configuration directory in app definitions.
# Adheres to freedesktop.org XDG Base Directory Specification
# https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"

apps=()


################################################################################
#
# Helix Editor.
#
################################################################################

helixEditorCommand="hx"
helixConfigurationDirectory="${CONFIG_HOME}/helix"
helixConfigurationFile="${helixConfigurationDirectory}/config.toml"

function helixEditorInit {
  # Ensure configuration exists.
  mkdir -p "${helixConfigurationDirectory}"
  if ! test -f "${helixConfigurationFile}"; then
    echo 'theme = "default"' > "${helixConfigurationFile}"
  fi
}

function helixEditorLight {
  sed -i 's/theme = ".*"/theme = "onelight"/' "${CONFIG_HOME}/helix/config.toml"
}

function helixEditorDark {
  sed -i 's/theme = ".*"/theme = "dracula"/' "${CONFIG_HOME}/helix/config.toml"
}

apps+=("helixEditor")


################################################################################
#
# Bat
#
################################################################################

batCommand="bat"

function batInit {
  # Ensure configuration exists.
  configDirectory=`bat --config-dir`
  configFile=`bat --config-file`

  if [[ ! -f "${configFile}" ]]; then
    mkdir -p "${configDirectory}"
    echo -e "--theme=\"\"\n" > "${configFile}"
  fi
}

function batLight {
  configFile=`bat --config-file`
  sed -i 's/theme=".*"/theme="Monokai Extended Light"/' "${configFile}"
}

function batDark {
  configFile=`bat --config-file`
  sed -i 's/theme=".*"/theme="Dracula"/' "${configFile}"
}

apps+=("bat")

################################################################################
#
# Batcat (on Debian and Ubuntu, the bat binary is called batcat).
#
################################################################################

batcatCommand="batcat"

function batcatInit {
  # Ensure configuration exists.
  configDirectory=`batcat --config-dir`
  configFile=`batcat --config-file`

  if [[ ! -f "${configFile}" ]]; then
    mkdir -p "${configDirectory}"
    echo -e "--theme=\"\"\n" > "${configFile}"
  fi
}

function batcatLight {
  configFile=`batcat --config-file`
  sed -i 's/theme=".*"/theme="Monokai Extended Light"/' "${configFile}"
}

function batcatDark {
  configFile=`batcat --config-file`
  sed -i 's/theme=".*"/theme="Dracula"/' "${configFile}"
}

apps+=("batcat")

################################################################################
#
# Delta
#
################################################################################

deltaCommand="delta"

function deltaInit {
  # TODO
  true
}

function deltaLight {
  # TODO
  true
}

function deltaDark {
  # TODO
  true
}
